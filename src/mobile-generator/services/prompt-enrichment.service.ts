import { Injectable, Logger } from '@nestjs/common';
import { ChatgptService } from '../../chatgpt/chatgpt.service';

interface DomainTemplate {
  name: string;
  requiredPages: string[];
  specificFunctionalities: string[];
  keywords: string[];
}

@Injectable()
export class PromptEnrichmentService {
  private readonly logger = new Logger(PromptEnrichmentService.name);

  constructor(private readonly chatgptService: ChatgptService) {}

  /**
   * Enriquece un prompt b√°sico usando IA para interpretar y generar p√°ginas espec√≠ficas
   * @param originalPrompt Prompt original del usuario
   * @returns Prompt enriquecido con p√°ginas y funcionalidades espec√≠ficas interpretadas por IA
   */
  async enrichPrompt(originalPrompt: string): Promise<string> {
    this.logger.debug(`üîç Interpretando prompt: "${originalPrompt.substring(0, 50)}..."`);
    
    // Detectar dominio espec√≠fico sin IA
    const detectedDomain = this.detectDomainAdvanced(originalPrompt);
    
    if (detectedDomain.name !== 'aplicacion_generica') {
      this.logger.debug(`üéØ Dominio detectado: ${detectedDomain.name} - generando especificaci√≥n espec√≠fica`);
      return this.generateDomainSpecificPrompt(originalPrompt, detectedDomain);
    }
    
    // Solo intentar IA si no se detect√≥ dominio espec√≠fico Y hay API key disponible
    if (process.env.OPENAI_API_KEY) {
      try {
        this.logger.debug(`ü§ñ Enviando prompt a IA para interpretaci√≥n completa`);
        const aiInterpretedPrompt = await this.sendToAIForInterpretation(originalPrompt);
        this.logger.debug(`‚úÖ IA interpret√≥ y enriqueci√≥ el prompt exitosamente`);
        return aiInterpretedPrompt;
    } catch (error) {
        this.logger.error(`‚ùå Error en interpretaci√≥n de IA: ${error.message}`);
        this.logger.warn(`‚ö†Ô∏è Fallback a plantilla gen√©rica`);
      }
    } else {
      this.logger.warn(`‚ö†Ô∏è Sin API key de OpenAI - usando detecci√≥n por keywords`);
    }
    
    // Fallback final: plantilla gen√©rica
    return this.generatePromptWithBasicRules(originalPrompt);
  }

  /**
   * Genera un prompt enriquecido espec√≠fico para el dominio detectado
   */
  private generateDomainSpecificPrompt(originalPrompt: string, domain: DomainTemplate): string {
    const pagesDescription = domain.requiredPages.map((page, index) => 
      `${index + 1}. ${page}`
    ).join('\n');

    const functionalitiesDescription = domain.specificFunctionalities.map((func, index) => 
      `- ${func}`
    ).join('\n');

    return `${originalPrompt}

APLICACI√ìN DEL DOMINIO: ${domain.name.toUpperCase()}

P√ÅGINAS PRINCIPALES OBLIGATORIAS (m√≠nimo ${domain.requiredPages.length}):
${pagesDescription}

FUNCIONALIDADES ESPEC√çFICAS DEL DOMINIO:
${functionalitiesDescription}

FUNCIONALIDADES BASE (toda app m√≥vil moderna):
- Sistema de autenticaci√≥n completo (LoginScreen, RegisterScreen)
- Dashboard principal con navegaci√≥n intuitiva
- Perfil de usuario editable (ProfileScreen)
- Configuraciones de la aplicaci√≥n (SettingsScreen)
- Estados de carga, error y √©xito en toda la app
- Validaciones de formularios con mensajes claros
- Navegaci√≥n con bottom navigation o drawer
- Dise√±o Material Design 3 responsive

ESPECIFICACIONES T√âCNICAS:
- Usar Flutter con GoRouter para navegaci√≥n
- Material Design 3 con useMaterial3: true
- Implementar TODAS las pantallas listadas arriba
- Formularios con validaci√≥n reactiva
- Navegaci√≥n fluida entre todas las pantallas
- Componentes reutilizables y c√≥digo limpio
- Manejo de estados con Provider o Riverpod

PANTALLAS M√çNIMAS TOTALES: ${domain.requiredPages.length + 4} (${domain.requiredPages.length} espec√≠ficas + 4 base)`;
  }

  /**
   * Detecta el dominio de aplicaci√≥n con plantillas espec√≠ficas
   */
  private detectDomainAdvanced(prompt: string): DomainTemplate {
    const lowerPrompt = prompt.toLowerCase();
    
    const domainTemplates: DomainTemplate[] = [
      // GYM/FITNESS
      {
        name: 'fitness_gym',
        keywords: ['gym', 'gimnasio', 'fitness', 'ejercicio', 'entrenamiento', 'rutina', 'musculo'],
        requiredPages: [
          'HomeScreen: Dashboard con resumen de entrenamientos y progreso del d√≠a',
          'WorkoutScreen: Lista de rutinas disponibles con categor√≠as (pecho, piernas, etc.)',
          'ExerciseDetailScreen: Detalles de ejercicios con instrucciones y videos',
          'ProgressScreen: Gr√°ficos de progreso, peso levantado y estad√≠sticas',
          'TrainingHistoryScreen: Historial de entrenamientos completados'
        ],
        specificFunctionalities: [
          'Sistema de rutinas de ejercicio por grupos musculares',
          'Seguimiento de progreso con gr√°ficos de peso y repeticiones',
          'Cron√≥metro para descansos entre series',
          'Calendario de entrenamientos',
          'Calculadora de IMC y m√©tricas corporales',
          'Biblioteca de ejercicios con instrucciones',
          'Sistema de logros y objetivos',
          'Recordatorios de entrenamiento'
        ]
      },
      
      // FINANZAS/CONTABLE
      {
        name: 'finanzas_contable',
        keywords: ['contable', 'financiero', 'banco', 'dinero', 'transaccion', 'presupuesto', 'gasto'],
        requiredPages: [
          'HomeScreen: Dashboard financiero con balance actual y gastos del mes',
          'TransactionsScreen: Lista de todas las transacciones con filtros',
          'AddTransactionScreen: Formulario para agregar ingresos/gastos',
          'ReportsScreen: Reportes financieros con gr√°ficos y estad√≠sticas',
          'CategoriesScreen: Gesti√≥n de categor√≠as de gastos e ingresos'
        ],
        specificFunctionalities: [
          'Registro de ingresos y gastos por categor√≠as',
          'Dashboard con gr√°ficos de flujo de dinero',
          'Reportes de balance mensual y anual',
          'Categorizaci√≥n autom√°tica de movimientos',
          'Presupuestos por categor√≠a con alertas',
          'Exportaci√≥n de reportes a PDF/Excel',
          'An√°lisis de tendencias de gasto',
          'Recordatorios de pagos recurrentes'
        ]
      },
      
      // E-COMMERCE/TIENDA
      {
        name: 'ecommerce_tienda',
        keywords: ['tienda', 'venta', 'producto', 'carrito', 'compra', 'ecommerce', 'catalogo'],
        requiredPages: [
          'HomeScreen: Cat√°logo de productos destacados con b√∫squeda',
          'ProductListScreen: Lista de productos con filtros y categor√≠as',
          'ProductDetailScreen: Detalles del producto con galer√≠a e informaci√≥n',
          'CartScreen: Carrito de compras con resumen y checkout',
          'OrdersScreen: Historial de pedidos y seguimiento'
        ],
        specificFunctionalities: [
          'Cat√°logo de productos con b√∫squeda avanzada',
          'Carrito de compras persistente',
          'Sistema de favoritos/wishlist',
          'M√∫ltiples m√©todos de pago',
          'Seguimiento de pedidos en tiempo real',
          'Sistema de reviews y ratings',
          'Notificaciones de ofertas y stock',
          'Gesti√≥n de direcciones de env√≠o'
        ]
      },
      
      // DELIVERY/COMIDA
      {
        name: 'delivery_comida',
        keywords: ['delivery', 'entrega', 'pedido', 'restaurante', 'comida', 'domicilio'],
        requiredPages: [
          'HomeScreen: Lista de restaurantes cercanos con b√∫squeda',
          'RestaurantDetailScreen: Men√∫ del restaurante con categor√≠as',
          'CartScreen: Carrito con productos seleccionados y total',
          'OrderTrackingScreen: Seguimiento del pedido en tiempo real',
          'OrderHistoryScreen: Historial de pedidos anteriores'
        ],
        specificFunctionalities: [
          'B√∫squeda de restaurantes por ubicaci√≥n',
          'Men√∫s categorizados con im√°genes',
          'Carrito con personalizaci√≥n de productos',
          'Tracking en tiempo real del delivery',
          'M√∫ltiples m√©todos de pago',
          'Sistema de ratings para restaurantes',
          'Estimaci√≥n de tiempo de entrega',
          'Notificaciones push del estado del pedido'
        ]
      },
      
      // SALUD/M√âDICO
      {
        name: 'salud_medico',
        keywords: ['medico', 'm√©dico', 'medica', 'm√©dica', 'hospital', 'paciente', 'cita', 'salud', 'clinica', 'cl√≠nica', 'doctor', 'medicina', 'aplicacion medica', 'aplicaci√≥n m√©dica', 'enfermeria', 'farmacia', 'telemedicina'],
        requiredPages: [
          'HomeScreen: Dashboard de salud con pr√≥ximas citas y recordatorios',
          'DoctorsScreen: Lista de m√©dicos disponibles con especialidades',
          'AppointmentScreen: Agendar nueva cita m√©dica',
          'MedicalHistoryScreen: Historial m√©dico y expediente',
          'PrescriptionsScreen: Recetas m√©dicas y medicamentos'
        ],
        specificFunctionalities: [
          'Sistema de agendamiento de citas',
          'Historial m√©dico digital',
          'Gesti√≥n de recetas y medicamentos',
          'Recordatorios de citas y medicinas',
          'Directorio de m√©dicos por especialidad',
          'Telemedicina b√°sica',
          'Alertas de ex√°menes m√©dicos',
          'Compartir informaci√≥n con familiares'
        ]
      },
      
      // EDUCACI√ìN/ESCOLAR
      {
        name: 'educacion_escolar',
        keywords: ['escolar', 'estudiante', 'profesor', 'curso', 'educativo', 'educativa', 'aprendizaje', 'clase'],
        requiredPages: [
          'HomeScreen: Dashboard estudiantil con pr√≥ximas clases y tareas',
          'CoursesScreen: Lista de materias/cursos inscritos',
          'AssignmentsScreen: Tareas pendientes y completadas',
          'GradesScreen: Calificaciones por materia y promedio',
          'ScheduleScreen: Horario de clases semanal'
        ],
        specificFunctionalities: [
          'Gesti√≥n de materias y horarios',
          'Sistema de tareas y entregables',
          'Calificaciones y reportes acad√©micos',
          'Calendario acad√©mico',
          'Comunicaci√≥n con profesores',
          'Biblioteca de recursos educativos',
          'Recordatorios de clases y ex√°menes',
          'Progreso acad√©mico por materia'
        ]
      },
      
      // SOCIAL/CHAT
      {
        name: 'social_chat',
        keywords: ['chat', 'mensaje', 'amigo', 'red social', 'post', 'comentario', 'social'],
        requiredPages: [
          'HomeScreen: Feed de publicaciones de amigos',
          'ChatsScreen: Lista de conversaciones activas',
          'ChatDetailScreen: Conversaci√≥n individual con mensajer√≠a',
          'ProfileScreen: Perfil p√∫blico con posts y seguidores',
          'CreatePostScreen: Crear nueva publicaci√≥n con media'
        ],
        specificFunctionalities: [
          'Sistema de mensajer√≠a en tiempo real',
          'Feed de publicaciones con likes y comentarios',
          'Sistema de amigos/seguidores',
          'Compartir fotos y videos',
          'Notificaciones de actividad social',
          'Estados/stories temporales',
          'Grupos y comunidades',
          'Chat grupal'
        ]
      }
    ];

    // Buscar coincidencias por keywords
    for (const template of domainTemplates) {
      if (template.keywords.some(keyword => lowerPrompt.includes(keyword))) {
        this.logger.debug(`üéØ Dominio espec√≠fico detectado: ${template.name}`);
        return template;
      }
    }

    // Fallback: plantilla gen√©rica
    this.logger.debug(`üîÑ Usando plantilla gen√©rica`);
    return this.getGenericTemplate();
  }

  /**
   * Plantilla gen√©rica para aplicaciones que no coinciden con dominios espec√≠ficos
   */
  private getGenericTemplate(): DomainTemplate {
    return {
      name: 'aplicacion_generica',
      keywords: [],
      requiredPages: [
        'HomeScreen: Pantalla principal con funcionalidades principales',
        'ListScreen: Lista de elementos principales de la aplicaci√≥n',
        'DetailScreen: Vista detallada de elementos individuales',
        'CreateEditScreen: Formulario para crear/editar elementos',
        'SearchScreen: B√∫squeda y filtros avanzados'
      ],
      specificFunctionalities: [
        'CRUD completo de elementos principales',
        'Sistema de b√∫squeda y filtros',
        'Gesti√≥n de datos locales y remotos',
        'Interfaz intuitiva y responsive',
        'Validaciones de formularios',
        'Estados de carga y error',
        'Navegaci√≥n fluida entre pantallas',
        'Persistencia de datos local'
      ]
    };
  }

  /**
   * Env√≠a el prompt a la IA con reglas claras para interpretaci√≥n completa y detallada
   */
  private async sendToAIForInterpretation(originalPrompt: string): Promise<string> {
    const interpretationPrompt = `
SISTEMA EXPERTO EN ARQUITECTURA DE APLICACIONES M√ìVILES FLUTTER

MISI√ìN: Interpretar "${originalPrompt}" y generar una ESPECIFICACI√ìN T√âCNICA ULTRA-DETALLADA que o3 pueda convertir directamente en c√≥digo Flutter funcional.

ENTRADA DEL USUARIO:
"${originalPrompt}"

REGLAS OBLIGATORIAS PARA LA ESPECIFICACI√ìN:

1. üéØ IDENTIFICACI√ìN DEL DOMINIO:
   - Detectar EXACTAMENTE qu√© tipo de aplicaci√≥n es
   - Especificar el dominio (m√©dica, educativa, e-commerce, fitness, finanzas, etc.)
   - Definir el p√∫blico objetivo y caso de uso principal

2. üì± P√ÅGINAS ESPEC√çFICAS DETALLADAS (M√çNIMO 6):
   Para cada p√°gina, especificar:
   - Nombre exacto de la clase (ej: AppointmentsScreen, DoctorsListScreen)
   - Prop√≥sito espec√≠fico y funcionalidad principal
   - Componentes UI espec√≠ficos (AppBar, Body, FAB, BottomNav, etc.)
   - Estados que maneja (loading, error, success, empty)
   - Formularios con campos espec√≠ficos y validaciones
   - Acciones de usuario (tap, scroll, submit, etc.)
   - Navegaci√≥n hacia otras pantallas

3. üèóÔ∏è ARQUITECTURA T√âCNICA ESPEC√çFICA:
   - Estructura de directorios exacta
   - Nombres de archivos espec√≠ficos
   - Imports y dependencias necesarias
   - Modelos de datos con propiedades exactas
   - Servicios y controladores necesarios

4. üé® DISE√ëO UI ESPEC√çFICO:
   - Widgets espec√≠ficos para cada pantalla
   - Layout detallado (Column, Row, ListView, etc.)
   - Colores, iconos y tipograf√≠a espec√≠fica
   - Responsive design considerations
   - Material Design 3 components espec√≠ficos

5. üîÑ FLUJO DE NAVEGACI√ìN DETALLADO:
   - GoRouter routes espec√≠ficas con paths exactos
   - Transiciones entre pantallas
   - Bottom navigation o drawer espec√≠fico
   - Deep linking structure

6. üíæ GESTI√ìN DE DATOS ESPEC√çFICA:
   - Modelos de datos exactos con tipos
   - M√©todos CRUD espec√≠ficos
   - Estados locales con StatefulWidget
   - Validaci√≥n de formularios espec√≠fica

FORMATO DE RESPUESTA OBLIGATORIO:

ESPECIFICACI√ìN T√âCNICA DETALLADA PARA o3:

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
üìã TIPO DE APLICACI√ìN IDENTIFICADA
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
[Especificar dominio exacto y prop√≥sito]

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
üì± P√ÅGINAS ESPEC√çFICAS (m√≠nimo 6)
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
1. P√ÅGINA: [NombreExactoScreen]
   - PROP√ìSITO: [funci√≥n espec√≠fica]
   - UI COMPONENTS: [widgets espec√≠ficos]
   - FORMULARIOS: [campos y validaciones exactas]
   - ACCIONES: [funciones espec√≠ficas]
   - NAVEGACI√ìN: [hacia qu√© pantallas]

[Repetir para cada p√°gina con M√ÅXIMO DETALLE]

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
üèóÔ∏è ARQUITECTURA FLUTTER ESPEC√çFICA
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
- ESTRUCTURA DE DIRECTORIOS: [exacta]
- ARCHIVOS NECESARIOS: [lista completa]
- MODELOS DE DATOS: [con propiedades espec√≠ficas]
- SERVICIOS: [m√©todos espec√≠ficos]

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
üé® DISE√ëO UI DETALLADO
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
- LAYOUT ESPEC√çFICO: [widgets y estructura]
- NAVEGACI√ìN: [BottomNav/Drawer espec√≠fico]
- COLORES Y TEMA: [Material Design 3 espec√≠fico]

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
üîÑ FLUJO DE NAVEGACI√ìN COMPLETO
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
- ROUTES: [paths espec√≠ficos con GoRouter]
- TRANSICIONES: [entre pantallas espec√≠ficas]

IMPORTANTE: 
- Cada p√°gina debe tener FUNCIONALIDAD ESPEC√çFICA del dominio detectado
- No usar t√©rminos gen√©ricos como "ListScreen" sino nombres espec√≠ficos como "PatientListScreen", "AppointmentsScreen", etc.
- Especificar TODOS los campos de formularios, botones, y funcionalidades
- Dar suficiente detalle para que o3 pueda generar c√≥digo Flutter completo y funcional
    `;

    try {
      const messages = [
        { role: 'system', content: 'Eres un arquitecto de software senior especializado en Flutter que genera especificaciones t√©cnicas ultra-detalladas para que o3 pueda convertir en c√≥digo funcional.' },
        { role: 'user', content: interpretationPrompt }
      ];
      
      // Usar GPT-4o para interpretaci√≥n detallada
      const response = await this.chatgptService.chat(messages, 'gpt-4o', 0.2);
      return response;
    } catch (error) {
      this.logger.error('Error llamando a IA para interpretaci√≥n:', error);
      throw error;
    }
  }

  /**
   * Genera prompt con reglas b√°sicas como fallback
   */
  private generatePromptWithBasicRules(originalPrompt: string): string {
    return `
${originalPrompt}

ESPECIFICACI√ìN T√âCNICA AUTOM√ÅTICA:

P√ÅGINAS PRINCIPALES (m√≠nimo 4):
1. HomeScreen: Pantalla principal con funcionalidades principales
2. ListScreen: Lista de elementos principales de la aplicaci√≥n  
3. DetailScreen: Vista detallada de elementos individuales
4. FormScreen: Formulario para crear/editar elementos
5. ProfileScreen: Perfil de usuario
6. SettingsScreen: Configuraciones de la aplicaci√≥n

FUNCIONALIDADES BASE:
- Sistema de autenticaci√≥n (login/registro)
- CRUD completo de elementos principales
- Navegaci√≥n fluida entre pantallas
- Formularios con validaci√≥n
- Estados de carga y error
- B√∫squeda y filtros
- Persistencia de datos

ESPECIFICACIONES T√âCNICAS:
- Flutter con Material Design 3
- GoRouter para navegaci√≥n
- Provider o Riverpod para manejo de estado
- Validaci√≥n de formularios reactiva
- Dise√±o responsive
- Componentes reutilizables

TOTAL DE PANTALLAS: 6 principales + pantallas de autenticaci√≥n
    `;
  }

  /**
   * Genera prompt gen√©rico como fallback
   */
  private generateGenericEnrichedPrompt(originalPrompt: string): string {
    const genericTemplate = this.getGenericTemplate();
    return this.generateDomainSpecificPrompt(originalPrompt, genericTemplate);
  }
} 